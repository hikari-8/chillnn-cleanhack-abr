scalar AWSDate

scalar AWSDateTime

scalar AWSEmail

scalar AWSIPAddress

scalar AWSJSON

scalar AWSPhone

scalar AWSTime

scalar AWSTimestamp

scalar AWSURL

type CleanPlaceMast {
  cleanPlaceID: ID!
  placeName: String!
  groupID: String!
  headCount: Int
  limitTime: AWSTimestamp
  createdAt: AWSTimestamp!
  updatedAt: AWSTimestamp
  deletedAt: AWSTimestamp
}

type CleanPlaceMastInput {
  cleanPlaceID: ID!
  placeName: String!
  groupID: String!
  headCount: Int
  limitTime: AWSTimestamp
  createdAt: AWSTimestamp!
  updatedAt: AWSTimestamp
  deletedAt: AWSTimestamp
}

enum ErrorCode {
  chillnnTraining_401_notSignIn
  chillnnTraining_404_resourceNotFound
  chillnnTraining_500_systemError
}

type RoomMast {
  roomID: String!
  roomName: String!
  createdAt: AWSTimestamp!
  updatedAt: AWSTimestamp
  deletedAt: AWSTimestamp
}

type RoomMastInput {
  roomID: String!
  roomName: String!
  createdAt: AWSTimestamp!
  updatedAt: AWSTimestamp
  deletedAt: AWSTimestamp
}

type UserMast {
  userID: ID!
  name: String!
  role: String!
  status: String!
  records: [String]
  createdAt: AWSTimestamp!
  updatedAt: AWSTimestamp
  deletedAt: AWSTimestamp
}

input UserMastInput {
  userID: ID!
  name: String!
  role: String!
  status: String!
  records: [String]
  createdAt: AWSTimestamp!
  updatedAt: AWSTimestamp
  deletedAt: AWSTimestamp
}

type WeeklyRecordMast {
  weeklyRecordID: String!
  cleanPlaceID: String
  placeName: String
  roomID: String!
  headCount: Int
  LimitTime: AWSDateTime
  createdAt: AWSTimestamp!
  updatedAt: AWSTimestamp
}

input WeeklyRecordMastInput {
  weeklyRecordID: String!
  cleanPlaceID: String
  placeName: String
  roomID: String!
  headCount: Int
  LimitTime: AWSDateTime
  createdAt: AWSTimestamp!
  updatedAt: AWSTimestamp
}
